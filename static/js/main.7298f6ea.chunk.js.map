{"version":3,"sources":["components/PrimarySearchAppBar/PrimarySearchAppBar.tsx","components/searchBar/SearchInput.tsx","components/searchBar/fetchRepos.ts","components/searchBar/SearchBar.tsx","components/ListOfRepos/SingleRepo.tsx","components/ListOfRepos/NoRepos.tsx","components/ListOfRepos/ListOfRepos.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","grow","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","PrimaryAppBar","classes","className","AppBar","position","Toolbar","Typography","variant","noWrap","root","padding","alignItems","width","input","marginLeft","flex","iconButton","divider","height","margin","CustomizedInputBase","prop","React","useState","text","settext","Paper","component","IconButton","aria-label","InputBase","placeholder","inputProps","onChange","event","target","value","type","onClick","preventDefault","handleChange","setpage","fetchRepos","query","a","page","per_page","order","accept","apiURL","success","Axios","get","response","console","log","data","formControl","minWidth","selectEmpty","marginTop","SearchBar","setfetching","setrepos","setSearchString","Box","justifyContent","Grid","item","xs","repos","total_count","flexDirection","Button","e","searchString","color","paper","control","SingleRepo","container","justify","Avatar","alt","src","owner","avatar_url","Link","href","html_url","login","name","gutterBottom","description","direction","sm","language","stargazers_count","forks","Date","pushed_at","toLocaleString","Divider","NoRepos","ListOfRepos","repositories","fetching","style","CircularProgress","items","map","id","length","App","Container","maxWidth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7298f6ea.chunk.js","sourcesContent":["import React from 'react';\r\nimport {makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      display: 'none',\r\n      [theme.breakpoints.up('sm')]: {\r\n        display: 'block',\r\n      },\r\n    },\r\n  }),\r\n);\r\n\r\nexport default function PrimaryAppBar() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Start Searching Github\r\n          </Typography>\r\n          <GitHubIcon className=\"m-1\"/>\r\n          \r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      padding: \"2px 4px\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      width: \"100%\",\r\n    },\r\n    input: {\r\n      marginLeft: theme.spacing(1),\r\n      flex: 1,\r\n    },\r\n    iconButton: {\r\n      padding: 10,\r\n    },\r\n    divider: {\r\n      height: 28,\r\n      margin: 4,\r\n    },\r\n  })\r\n);\r\n\r\ntype propType = {\r\n  handleChange: Function;\r\n  setpage: Function;\r\n};\r\n\r\nexport default function CustomizedInputBase(prop: propType) {\r\n  const classes = useStyles();\r\n  const [text, settext] = React.useState(\"\");\r\n  return (\r\n    <Paper component=\"form\" className={classes.root}>\r\n      <IconButton className={classes.iconButton} aria-label=\"menu\">\r\n        <MenuIcon />\r\n      </IconButton>\r\n      <InputBase\r\n        className={classes.input}\r\n        placeholder=\"Search Github Repositories\"\r\n        inputProps={{ \"aria-label\": \"search github repositries\" }}\r\n        onChange={(event) => settext(event.target.value)}\r\n      />\r\n      <IconButton\r\n        type=\"submit\"\r\n        className={classes.iconButton}\r\n        aria-label=\"search\"\r\n        onClick={(event) => {\r\n          event.preventDefault();\r\n          prop.handleChange(text); // call handle change for new api call with text as query\r\n          prop.setpage(1); // reset page number\r\n        }}\r\n      >\r\n        <SearchIcon />\r\n      </IconButton>\r\n    </Paper>\r\n  );\r\n}\r\n","import Axios from \"axios\";\r\n\r\ninterface IPost {\r\n  data: object;\r\n}\r\nexport default async function fetchRepos(\r\n  query: string,\r\n  page: number = 1,\r\n  per_page: number = 10,\r\n  order: string = \"desc\",\r\n  accept: string = \"application/vnd.github.v3+json\"\r\n) {\r\n  const apiURL = \"https://api.github.com/search/repositories\";\r\n  let success: boolean = true;\r\n  try {\r\n    const response = await Axios.get<IPost[]>(\r\n      `${apiURL}?q=${query}&&per_page=${per_page}&&page=${page}&&order=${order}&&accept=${accept}`\r\n    );\r\n\r\n    console.log(\"response\", response);\r\n    return { success, data: response[\"data\"] };\r\n  } catch (error) {\r\n    return { success: false };\r\n  }\r\n}\r\n\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport CustomizedInputBase from \"./SearchInput\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { Button, Grid, Typography } from \"@material-ui/core\";\r\nimport fetchRepos from \"./fetchRepos\";\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    divider: {\r\n      height: 28,\r\n      margin: 4,\r\n    },\r\n  })\r\n);\r\n\r\ntype PropType = {\r\n  setrepos: Function;\r\n  setSearchString: Function;\r\n  setfetching: Function;\r\n  page: number;\r\n  setpage: Function;\r\n  repos: any;\r\n  searchString: string;\r\n};\r\n\r\nexport default function SearchBar(prop: PropType) {\r\n  const classes = useStyles();\r\n  // const sortButtons=[\r\n  //   {label: \"Language\", options:[\"JavaScript\", \"HTML\", \"CSS\"]},\r\n  //   {label: \"Language\", options:[\"JavaScript\", \"HTML\", \"CSS\"]},\r\n  //   {label: \"Language\", options:[\"JavaScript\", \"HTML\", \"CSS\"]},\r\n  // ]\r\n  const handleChange = async (query: string) => {\r\n    if (!query) {\r\n      return false;\r\n    }\r\n\r\n    // show loading spinner\r\n    prop.setfetching(true);\r\n    const response = await fetchRepos(query, prop.page);\r\n    if (!response.success) prop.setrepos([]);\r\n    if (response.success) {\r\n      prop.setSearchString(query);\r\n      prop.setrepos(response.data);\r\n    }\r\n    prop.setfetching(false);\r\n    \r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"flex-start\"\r\n        alignItems=\"center\"\r\n        className=\"bg-light p-1 mt-1\"\r\n      >\r\n        <Grid item xs={12}>\r\n          <CustomizedInputBase handleChange={handleChange} setpage={prop.setpage}/>\r\n        </Grid>\r\n      </Box>\r\n      {prop.repos.total_count > 10 && prop.page*10 <=prop.repos.total_count  && (\r\n        <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"space-between\">\r\n          <Typography variant=\"body2\">\r\n            Current Page: {prop.page}, showing {prop.page * 10 - 10 + 1} to{\" \"}\r\n            {prop.page * 10} / {prop.repos.total_count}\r\n          </Typography>\r\n          <Button\r\n            onClick={(e) => {\r\n              prop.setpage(prop.page + 1);\r\n              handleChange(prop.searchString);\r\n            }}\r\n            color=\"primary\"\r\n          >\r\n            Next page ({prop.page + 1})\r\n          </Button>\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import {\r\n  Box,\r\n  createStyles,\r\n  Divider,\r\n  Grid,\r\n  Link,\r\n  makeStyles,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { useEffect } from \"react\";\r\nimport StarOutlineIcon from \"@material-ui/icons/StarOutline\";\r\nimport ComputerIcon from \"@material-ui/icons/Computer\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      height: 140,\r\n      width: 100,\r\n    },\r\n    control: {\r\n      padding: theme.spacing(2),\r\n    },\r\n  })\r\n);\r\nfunction SingleRepo(prop: any) {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Grid container spacing={1} className=\"single-repo\">\r\n        <Grid\r\n          container\r\n          className={classes.root}\r\n          justify=\"flex-start\"\r\n          alignItems=\"flex-end\"\r\n        >\r\n          <Grid item>\r\n            <Avatar alt=\"Remy Sharp\" src={prop.item.owner.avatar_url} />\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography className=\"ml-1\" variant=\"body1\">\r\n              <Link target=\"_blank\" href={prop.item.owner.html_url}>\r\n                @{prop.item.owner.login}\r\n              </Link>\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography className=\"repo-title\" variant=\"h5\" component=\"h2\">\r\n            <Link target=\"_blank\" href={prop.item.html_url}>\r\n              {prop.item.name}\r\n            </Link>\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography gutterBottom variant=\"body1\">{prop.item.description}</Typography>\r\n        </Grid>\r\n        <Grid container spacing={2}>\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            alignItems=\"center\"\r\n            item\r\n            xs={6}\r\n            sm={3}\r\n          >\r\n            <ComputerIcon className=\"text-gold\" />\r\n            <span className=\"ml-1 mb-1\">{prop.item.language}</span>\r\n          </Grid>\r\n\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            alignItems=\"center\"\r\n            item\r\n            xs={6}\r\n            sm={3}\r\n          >\r\n            <StarOutlineIcon className=\"text-gold\" />\r\n            <span className=\"ml-1 mb-1\">{prop.item.stargazers_count}</span>\r\n          </Grid>\r\n\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            alignItems=\"center\"\r\n            item\r\n            xs={6}\r\n            sm={3}\r\n          >\r\n            <span>{prop.item.forks} forks</span>\r\n          </Grid>\r\n\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            alignItems=\"center\"\r\n            item\r\n            xs={6}\r\n            sm={3}\r\n          >\r\n            <Typography color=\"textSecondary\" variant=\"body2\">\r\n              Published: {new Date(prop.item.pushed_at).toLocaleString(\"en-US\")}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Divider />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SingleRepo;\r\n","import { Box } from '@material-ui/core';\r\nimport React, { useEffect } from 'react'\r\n\r\nfunction NoRepos(){\r\n    return(\r\n    <Box>\r\n        <p>Nothing to show rightnow, please search in the searchbox or change input query</p> \r\n    </Box>\r\n    )\r\n}\r\n\r\nexport default NoRepos;","import { Box, CircularProgress } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport SingleRepo from \"./SingleRepo\";\r\nimport NoRepos from \"./NoRepos\";\r\ntype PropType = {\r\n  repos: any;\r\n  searchString: String;\r\n  fetching: boolean;\r\n  page: any;\r\n};\r\nfunction ListOfRepos(prop: PropType) {\r\n  let repositories = [];\r\n  if (prop.fetching) {\r\n    return (\r\n      <Box\r\n        style={{ height: \"70vh\" }}\r\n        alignItems=\"center\"\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  }\r\n  if (prop.repos.items) {\r\n    repositories = prop.repos.items.map((item: any) => {\r\n      return <SingleRepo key={item.id} item={item}></SingleRepo>;\r\n    });\r\n  }\r\n  return (\r\n    <Box>\r\n      <Box>\r\n        {prop.searchString && (\r\n          <p>\r\n            <strong>{prop.repos.total_count}</strong> results for repositories\r\n            matching <strong>{prop.searchString}</strong>\r\n          </p>\r\n        )}\r\n      </Box>\r\n      {repositories.length ? repositories : <></>}\r\n      {!repositories.length && <NoRepos />}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ListOfRepos;\r\n","import React, { FunctionComponent, useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport { Box, Container, Grid } from \"@material-ui/core\";\nimport PrimaryAppBar from \"./components/PrimarySearchAppBar/PrimarySearchAppBar\";\nimport SearchBar from \"./components/searchBar/SearchBar\";\nimport ListOfRepos from \"./components/ListOfRepos/ListOfRepos\";\n\nfunction App() {\n  const [repos, setrepos] = useState([]);\n  const [searchString, setSearchString] = useState(\"\");\n  const [fetching, setfetching] = useState(false);\n  const [page, setpage] = useState(1);\n  return (\n    <Box>\n      <PrimaryAppBar />\n      <Container>\n        <Container maxWidth=\"md\">\n          <SearchBar\n            setrepos={setrepos}\n            setSearchString={setSearchString}\n            searchString={searchString}\n            setfetching={setfetching}\n            setpage={setpage}\n            page={page}\n            repos={repos}\n          />\n          <ListOfRepos\n            repos={repos}\n            searchString={searchString}\n            fetching={fetching}\n            page={page}\n          />\n        </Container>\n      </Container>\n    </Box>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}